name: Deploy GH Pages

on:
  push:
    branches:
      - master

jobs:

  deploy-master:
    name: 'ðŸš§  Build & deploy ðŸš€'
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2

      # https://github.com/actions/setup-node
      - name: 'Setup node'
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: 'Setup PHP'
        uses: shivammathur/setup-php@v2
        with:
          coverage: "none"
          extensions: "json"
          ini-values: "memory_limit=-1"
          php-version: "8.2"

      - name: 'Determine composer cache directory'
        id: composer-cache
        run: echo "::set-output name=directory::$(composer config cache-dir)"
        working-directory: demo

      - name: 'Cache composer dependencies'
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.directory }}
          key: composer-${{ hashFiles('demo/composer.lock') }}

      - name: 'Cache parent NPM dependencies'
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: node-${{ hashFiles('package-lock.json') }}

      - name: 'Cache NPM dependencies'
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: node-${{ hashFiles('demo/package-lock.json') }}

      - name: 'Build parent package'
        run: |
          echo "::group::npm install"
            npm install --color=always --no-progress
          echo "::endgroup::"

          echo "::group::build"
            npx webpack --mode=production
          echo "::endgroup::"

      - name: 'Install dependencies'
        working-directory: demo
        run: |
          echo "::group::composer install"
            composer install --no-progress --ansi
          echo "::endgroup::"

          echo "::group::npm install"
            npm install --color=always --no-progress
          echo "::endgroup::"

      - name: 'Warmup'
        working-directory: demo
        run: |
          echo "::group::warmup production env"
            npx encore production --color
            bin/console cache:clear --ansi
            bin/console cache:warmup --ansi
          echo "::endgroup::"
        env:
          APP_ENV: prod
          WEBPACK_PUBLIC_PATH: /elao-admin/build

      - name: 'Build static site'
        working-directory: demo
        run: bin/console stenope:build build --no-interaction -vv --ansi --ignore-content-not-found
        env:
          APP_ENV: prod
          ROUTER_DEFAULT_URI: https://elao.github.io/elao-admin

      # https://github.com/marketplace/actions/deploy-to-github-pages
      - name: 'ðŸš€ Deploy'
        uses: JamesIves/github-pages-deploy-action@3.7.1
        with:
          COMMIT_MESSAGE: "[AUTO] Static site update for ${{ github.sha }}"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages # The branch the action should deploy to.
          FOLDER: demo/build # The folder the action should deploy.
          CLEAN: true # Automatically remove deleted files from the deploy branch
          CLEAN_EXCLUDE: '["pr/"]' # Don't clean the PR deployments
